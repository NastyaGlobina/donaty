function initFileUpload() {
    var dropzone = document.getElementById('helpDropArea');
    var dropzone_input = dropzone.querySelector('.help-upload-input');
    // var dropzone_button = dropzone.querySelector('.help-upload-button');
    var multiple = dropzone_input.getAttribute('multiple') ? true : false;
    var uploadedList = dropzone.querySelector('.help-upload-files-list');

    var acceptFiles = [
        'doc',
        'docx',
        'jpeg',
        'jpg',
        'png',
        'pdf',
    ];

    ['drag', 'dragstart', 'dragend', 'dragover', 'dragenter', 'dragleave', 'drop'].forEach(function(event) {
      dropzone.addEventListener(event, function(e) {
        e.preventDefault();
        e.stopPropagation();
      });
    });

    dropzone.addEventListener('dragover', function(e) {
      this.classList.add('dropzone-dragging');
    }, false);

    dropzone.addEventListener('dragleave', function(e) {
      this.classList.remove('dropzone-dragging');
    }, false);

    dropzone.addEventListener('drop', function(e) {
      this.classList.remove('dropzone-dragging');
      var files = e.dataTransfer.files;
      var dataTransfer = new DataTransfer();

      Array.prototype.forEach.call(files, file => {
        let fileName = file.name;
        let fileExt = fileName.split(".");
        if ( typeof fileExt[1] !== "undefined" && acceptFiles.includes(fileExt[1]) ) {
            let li = document.createElement('li');
            li.innerHTML = '<i class="icon icon-check text-success me-2 font-18"></i>' + file.name + " (" + file.size + " bytes)";
            uploadedList.appendChild(li);
            // uploadedFiles += "<li>" + file.name +
            // 	" (" + file.type + " | " + file.size +
            // 	" bytes)</li>";
            dataTransfer.items.add(file);
            if (!multiple) {
              return false;
            }
        } else {
            let li = document.createElement('li');
            li.innerHTML = '<i class="icon icon-x text-danger me-2 font-18"></i><div class="text-danger">' + file.name + " (" + file.size + " bytes) Неприпустимий формат!</div>";
            uploadedList.appendChild(li);
        }

      });

      var filesToBeAdded = dataTransfer.files;
      dropzone_input.files = filesToBeAdded;

    }, false);

    dropzone.addEventListener('click', function(e) {
      dropzone_input.click();
    });

    dropzone_input.addEventListener('change', function(e) {
        this.classList.remove('dropzone-dragging');
        var files = this.files;

        Array.prototype.forEach.call(files, file => {
            let fileName = file.name;
            let fileExt = fileName.split(".");
            if ( typeof fileExt[1] !== "undefined" && acceptFiles.includes(fileExt[1]) ) {
                let li = document.createElement('li');
                li.innerHTML = '<i class="icon icon-check text-success me-2 font-18"></i>' + file.name + " (" + file.size + " bytes)";
                uploadedList.appendChild(li);
                if (!multiple) {
                  return false;
                }
            } else {
                let li = document.createElement('li');
                li.innerHTML = '<i class="icon icon-x text-danger me-2 font-18"></i><div class="text-danger">' + file.name + " (" + file.size + " bytes) Неприпустимий формат!</div>";
                uploadedList.appendChild(li);
            }
        });
    });
}

initFileUpload();

addEventListener('ajax:always', function(event) {
    initFileUpload();
});



